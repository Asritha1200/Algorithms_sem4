#include <stdio.h>
/* low  --> Starting index,  high  --> Ending index */
void swap(int a[],int m,int n)
{
    int temp;
    temp=a[m];
    a[m]=a[n];
    a[n]=temp;
    
    
}
int partition(int a[],int low,int high)
{
    int i=low;
    int j=high;
    int v=a[low];

    while(i<j){
    
    
    while(a[i]<=v)
    {
        i++;
    }
    while(a[j]>v)
    {
        j--;
    }
    if(i<j)
    {
    swap(a,i,j);

    }}
    swap(a,low,j);
    
    return j;
}
void quicksort(int a[],int low,int high)
{
    int pivot_pos;
    if(low<high)    //if (low==high)single ele in the subproblem hence sorted
    {
        pivot_pos=partition(a,low,high);
        quicksort(a,low,pivot_pos-1);
         quicksort(a,pivot_pos+1,high);
    }
}

int main()
{
    int n;
    int a[10];
    printf("enter the size of array\n");
    scanf("%d",&n);
    printf("enter ele of array");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    int low=0;
    int high=n-1;
    quicksort(a,low,high);
     for(int i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
}
//java

package first;
import java.util.Scanner;


public class qss{
	void quicksort(int arr[],int l,int h)
	{
		if(l<h)
		{
			int j=partition(arr,l,h);
			quicksort(arr,l,j-1);
			quicksort(arr,j+1,h);
		}
		
		
	}
	int partition(int arr[],int l,int h)
	{
		int pivot=arr[l];
		int i=l;
		int j=h;
		while(i<j)
		{
			while(i<h &&arr[i]<=pivot){
				i++;
			}
			
			while(j>l && arr[j]>pivot){
				j--;
			}
				
				if(i<j)
				{
					swap(arr,i,j);
				}
		}
		swap(arr,l,j);
		
		return j;
	}
	void swap(int arr[],int i,int j)
	{
		int temp=arr[i];
		arr[i]=arr[j];
		arr[j]=temp;
		
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub\
		
  Scanner sc=new Scanner(System.in);
  System.out.println("enter the number elements");

	
  int n=sc.nextInt();
  int arr[]=new int[n];
  System.out.println("enter the values of the elements");
  for(int i=0;i<n;i++)
  {
	  arr[i]=sc.nextInt();  
  }
  sc.close();
	qss ob=new qss();
	ob.quicksort(arr,0,n-1);
	
	for(int i=0;i<n;i++)
	  {
		  System.out.println(arr[i]+" "); 
	  }
	
	  }

}

